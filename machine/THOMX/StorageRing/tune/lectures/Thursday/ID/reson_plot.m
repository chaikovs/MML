function f=reson_plot(norder_min,norder_max,nharm_max,ires,nuxmin,nuxmax,nuzmin,nuzmax,varargin)%function f=reson_plot(norder_min,norder_max,nharm_max,ires,nuxmin,nuxmax,nuzmin,nuzmax)%Usage: plot of all resonaces up to a given order%Plot of resonances m*nux+n*nuz=M, with |m|+|n|=norder% All lines for M = -nharm_max:nharm_max are drawn.% ires == 1, label resonances% ires not == 1, no labels%1. can omit last arguments %2. use [] to use default setting for the first four arguments%ex: %   reson_plot(1,6,3,1,0.1,0.25, 0.15, 0.30);%   reson_plot%   reson_plot([],[],[],[],0.1, 0.3, 0.2, 0.4)%if nargin>=9        fig1=findobj('Type','figure','Name','Tune Diagram');	if isempty(fig1)		fig1=figure('Name','Tune Diagram');	else 		figure(fig1)    endendif nargin<=4   nuxmin = 0.0;   nuxmax = 0.5;   nuzmin = 0.0;   nuzmax = 0.5;endif nargin<=3 || isempty(ires)    ires = 0;endif nargin<=2 || isempty(nharm_max)    nharm_max = 100;endif nargin<=1 || isempty(norder_max)    norder_max = 5;endif nargin==0 || isempty(norder_min)    norder_min = 1;endclfhold onaxis([nuxmin nuxmax nuzmin nuzmax])set(gca,'fontsize',20);%set(gca,'xlim',[nuxmin, nuxmax]);%set(gca,'ylim',[nuzmin, nuzmax]);%color={[0 0 0] [1 0 0],[0 0 1],[0 1 0],[1 0 1],[0 1 1 ] [1 1 0] [0 0 0] ...%       [1 .4 .6],[0 0 0],[0 0 0],[0 0 0],[0 0 0],[0 0 0],[0 0 0]};color={[0 0 0] [0 0 0],[0 0 0],[0 0 0],[0 0 0],[0 0 0 ] [0 0 0] [0 0 0] ...       [0 0 0],[0 0 0],[0 0 0],[0 0 0],[0 0 0],[0 0 0],[0 0 0]};linwid=[3.5, 3, 2.5,  2.0, 1.5, 1.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5];nux=linspace(nuxmin,nuxmax,200);for norder=norder_min:1:norder_max		for nharm=-nharm_max:1:nharm_max    %for    nharm=-2:1:nharm_max	nharm;		for m=-norder_max:1:norder_max			for n=-norder_max:1:norder_max				if(abs(m)+abs(n) == norder) 				method=search_line(m,n);				else					method=4;                    continue				end							switch method		%plot of n*nuz=nharm				case 1            if n<0                continue;            end			yy=[nharm./n nharm./n];			xx=[nuxmin nuxmax];			if(yy(1)>=nuzmin & yy(2)<=nuzmax) 				plot(xx,yy,'-','Color',color{norder},'LineWidth', linwid(norder))%				fprintf('order        m * nux + n * nuz = N      %5.0f   %5.0f    %5.0f        %5.0f \n',norder,m,n,nharm)				if(ires==1)					text(xx(2)+.002,yy(1),nharm,[num2str(m) ',' num2str(n) ',' num2str(nharm)] );				end			else			end					%plot of m*nux=nharm		case 2            if m<0                continue            end			xx=[nharm./m nharm./m];			yy=[nuzmin nuzmax];			if(xx(1)>=nuxmin & xx(2)<=nuxmax) 					plot(xx,yy,'-','Color',color{norder},'LineWidth', linwid(norder))%				fprintf('order        m * nux + n * nuz = N      %5.0f   %5.0f    %5.0f        %5.0f \n',norder,m,n,nharm)				if(ires==1)					text(xx(1)-.01,yy(2)+.005,nharm,[num2str(m) ',' num2str(n) ',' num2str(nharm)] );				end			else			end					%plot of m*nux+n*nuz=nharm		case 3            if m*n*nharm<0                continue            end            if nharm==0 && m<0                continue             end			x=[0 0];			y=[0 0];			nuz=(nharm-m*nux)/n;			test=(nuz>=nuzmin) & (nuz<=nuzmax);			if(any(test)==1)				igood=find(test);				x=nux(igood);				y=nuz(igood);				plot(x,y,'-','Color',color{norder},'LineWidth', linwid(norder))%				fprintf('order        m * nux + n * nuz = N      %5.0f   %5.0f    %5.0f        %5.0f \n',norder,m,n,nharm)				if(ires==1)					text(x(1),y(1),nharm,[num2str(m) ',' num2str(n) ',' num2str(nharm)] );				end			end					case 4		end			end		end		endendaxis squaregrid onxlabel('\nu_{x}');%ylabel('\nu_{z}');ylabel('\nu_{y}');function method=search_line(m,n)if(m == 0 & n == 0 ) method=4;else	if(n == 0) method=2;	else		if(m == 0) method=1;		else			method=3;		end	endend