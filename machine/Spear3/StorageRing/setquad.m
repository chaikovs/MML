function setquad(QMS, QuadSetpoint, WaitFlag)
% setquad(QMS, QuadSetpoint, WaitFlag)

if nargin < 3
    WaitFlag = -2;
end

QuadFamily = QMS.QuadFamily;
QuadDev = QMS.QuadDev;


Mode = getfamilydata(QuadFamily, 'Setpoint', 'Mode', QuadDev);
Machine = getfamilydata('Machine'); 

if strcmpi(Mode,'Simulator')
    setsp(QuadFamily, QuadSetpoint, QuadDev, WaitFlag); 
    
elseif strcmpi(Machine,'SPEAR3') || strcmpi(Machine,'SPEAR')
    %check if powersupply or shunt
    FamilyDeviceChannelTbl = { ...
            'QDX' [ 1  1] 81;...
            'QFX' [ 1  1] 82;...
            'QDY' [ 1  1] 83;...
            'QFY' [ 1  1] 84;...
            'QDZ' [ 1  1] 85;...
            'QFZ' [ 1  1] 86;...
            'QF'  [ 2  1] 87;...
            'QD'  [ 2  1] 88;...
            'QFC' [ 2  1] 89;...
            'QD'  [ 2  2] 90;...
            'QF'  [ 2  2] 91;...
            'QF'  [ 3  1] 92;...
            'QD'  [ 3  1] 93;...
            'QFC' [ 3  1] 94;...
            'QD'  [ 3  2] 95;...
            'QF'  [ 3  2] 96;...
            'QF'  [ 4  1] 65;...
            'QD'  [ 4  1] 66;...
            'QFC' [ 4  1] 67;...
            'QD'  [ 4  2] 68;...
            'QF'  [ 4  2] 69;...
            'QF'  [ 5  1] 70;...
            'QD'  [ 5  1] 71;...
            'QFC' [ 5  1] 72;...
            'QD'  [ 5  2] 73;...
            'QF'  [ 5  2] 74;...
            'QF'  [ 6  1] 75;...
            'QD'  [ 6  1] 76;...
            'QFC' [ 6  1] 77;...
            'QD'  [ 6  2] 78;...
            'QF'  [ 6  2] 79;...
            'QF'  [ 7  1] 49;...
            'QD'  [ 7  1] 50;...
            'QFC' [ 7  1] 51;...
            'QD'  [ 7  2] 52;...
            'QF'  [ 7  2] 53;...
            'QF'  [ 8  1] 54;...
            'QD'  [ 8  1] 55;...
            'QFC' [ 8  1] 56;...
            'QD'  [ 8  2] 57;...
            'QF'  [ 8  2] 58;...
            'QFZ' [ 9  1] 59;...
            'QDZ' [ 9  1] 60;...
            'QFY' [ 9  1] 61;...
            'QDY' [ 9  1] 62;...
            'QFX' [ 9  1] 63;...
            'QDX' [ 9  1] 64;...
%             'Q9S' [ 9  1] 0;...
             'Q9S' [ 9  2] 80;... 
%             'Q9S' [ 9  3] 0;...
            'QDX' [10   1] 33;...
            'QFX' [10   1] 34;...
            'QDY' [10   1] 35;...
            'QFY' [10   1] 36;...
            'QDZ' [10   1] 37;...
            'QFZ' [10   1] 38;...
            'QF'  [11   1] 39;...
            'QD'  [11   1] 40;...
            'QFC' [11   1] 41;...
            'QD'  [11   2] 42;...
            'QF'  [11   2] 43;...
            'QF'  [12   1] 44;...
            'QD'  [12   1] 45;...
            'QFC' [12   1] 46;...
            'QD'  [12   2] 47;...
            'QF'  [12   2] 48;...
            'QF'  [13   1] 17;...
            'QD'  [13   1] 18;...
            'QFC' [13   1] 19;...
            'QD'  [13   2] 20;...
            'QF'  [13   2] 21;...
            'QF'  [14   1] 22;...
            'QD'  [14   1] 23;...
            'QFC' [14   1] 24;...
            'QD'  [14   2] 25;...
            'QF'  [14   2] 26;...
            'QF'  [15   1] 27;...
            'QD'  [15   1] 28;...
            'QFC' [15   1] 29;...
            'QD'  [15   2] 30;...
            'QF'  [15   2] 31;...
            'QF'  [16   1] 1 ;...
            'QD'  [16   1] 2;...
            'QFC' [16   1] 3;...
            'QD'  [16   2] 4;...
            'QF'  [16   2] 5;...
            'QF'  [17   1] 6;...
            'QD'  [17   1] 7;...
            'QFC' [17   1] 8;...
            'QD'  [17   2] 9;...
            'QF'  [17   2] 10;...
            'QFZ' [18   1] 11;...
            'QDZ' [18   1] 12;...
            'QFY' [18   1] 13;...
            'QDY' [18   1] 14;...
            'QFX' [18   1] 15;...
            'QDX' [18   1] 16};
    
    %TblRowMatch = find(QMSChannelSelect==cell2mat(FamilyDeviceChannelTbl(:,3)));
    %TblRowMatch = TblRowMatch(1);
    %Family = FamilyDeviceChannelTbl{TblRowMatch,1};
    %Device = FamilyDeviceChannelTbl{TblRowMatch,2};   
    
    % There can only be scalar inputs
    QuadFamily = deblank(QuadFamily(1,:));
    QuadDev = QuadDev(1,:);
    QuadSetpoint = QuadSetpoint(1);
    
    if strcmpi(QuadFamily,'Q9S') && (QuadDev(2)==1) || (QuadDev(2)==3)    %quads in 9S straight
            setsp(QuadFamily, QuadSetpoint, QuadDev, WaitFlag); 
            if WaitFlag==-1 || WaitFlag==-2
               sleep(1.5);
            end
            if WaitFlag == -2
            sleep(1.5);
            [N, BPMDelay] = getbpmaverages;
            BPMDelay = 2.2*BPMDelay;
            if ~isempty(BPMDelay)
            sleep(BPMDelay);
            end
            end

    else
    try
        MatchFamily = find(strcmp(FamilyDeviceChannelTbl(:,1),QuadFamily));
        TBL = FamilyDeviceChannelTbl(MatchFamily,:);
        D = cell2mat(TBL(:,2));
        MatchDevice = find(D(:,1)==QuadDev(1) & D(:,2)==QuadDev(2));
        QMSChannelSelectNew = TBL{MatchDevice,3};
    catch
        error('Switch for this quad not found');    
    end
    
    QMSChannelSelect = getpv('118-QMS1:ChanSelect');    

    % Current QMS settings
    if QMSChannelSelectNew == QMSChannelSelect
        % Same quad - change current only
        %disp(['   Setting QMS current to ',num2str(QuadSetpoint),' Amp']);
        setpv('118-QMS1:CurrSetpt', QuadSetpoint);
    else 
        % Switch to a new quad
        setpv('118-QMS1:ChanSelect', QMSChannelSelectNew);
        
        % This starts a sequence in the IOC that firdt turns the current off
        %disp(['   Switching QMS relay. Wait ',num2str(QMSDELAY),' seconds ...'])
        pause(2);
        %disp(['   Setting QMS current to ',num2str(QuadSetpoint),' Amp']);
        setpv('118-QMS1:CurrSetpt', QuadSetpoint);
    end
    
    
    if WaitFlag==-1 || WaitFlag==-2
        % QMS Setpoint delay (big eddy current transient)
        sleep(1.5);
    end
    if WaitFlag == -2
        % QMS Setpoint delay (big eddy current transient)
        sleep(1.5);
        
        [N, BPMDelay] = getbpmaverages;
        BPMDelay = 2.2*BPMDelay;
        if ~isempty(BPMDelay)
            sleep(BPMDelay);
        end
    end
   end   %quad spply, not QMS
else  %not SPEAR ring
    
    setsp(QuadFamily, QuadSetpoint, QuadDev, WaitFlag); 
    
end  %simulator condition
